version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: pm_postgres
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgsql_data:/var/lib/postgresql/data
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - processmaker_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pm_app
    env_file: .env
    environment:
      DB_HOST: db
      REDIS_HOST: redis
    volumes:
      - app_data:/var/www/html/storage
      - ./config/php/php.ini:/usr/local/etc/php/conf.d/processmaker.ini
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - processmaker_network

  webserver:
    image: nginx:1.25-alpine
    container_name: pm_webserver
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./config/nginx/processmaker.conf:/etc/nginx/conf.d/default.conf
      - app_data:/var/www/html:ro
    depends_on:
      - app
    networks:
      - processmaker_network

volumes:
  pgsql_data:
  redis_data:
  app_data:

networks:
  processmaker_network:
    driver: bridge